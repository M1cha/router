define if_lan = "enp1s0"
define if_lan_mgmt = "enp1s0.100"
define if_lan_guest = "enp1s0.200"
define if_modem = "end0"
define if_wan = "ppp0"
define if_podman = "podman0"
define if_wg_main = "wg0"
define if_wg_parents = "wg1"

include "/usr/local/share/nftables-vars-private.nft"

table inet router
delete table inet router

table inet router {
	chain input_allow_icmp {
		ip protocol icmp counter accept comment "Accept all ICMP types"
		ip6 nexthdr icmpv6 counter accept comment "Accept all ICMP types"
	}

	chain input_syn_flood {
		limit rate 25/second burst 50 packets return comment "Accept SYN packets below rate-limit"
		drop comment "Drop excess packets"
	}

	chain input_dnsmasq {
		meta l4proto { tcp, udp } th dport 53 accept comment "DNS"
		udp dport 67 accept comment "DHCP"
		udp sport 546 udp dport 547 accept comment "DHCPv6"
	}

	chain input_lan {
		jump input_allow_icmp
		jump input_dnsmasq
		tcp dport 22 accept comment "SSH"
	}

	chain input_lan_mgmt {
		jump input_allow_icmp
		jump input_dnsmasq
	}

	chain input_lan_guest {
		jump input_allow_icmp
		jump input_dnsmasq
	}

	chain input_modem {
		jump input_allow_icmp
	}

	chain input_wan {
		udp dport 443 accept comment "main wireguard"
		udp dport 51394 accept comment "parents wireguard"
	}

	chain input {
		type filter hook input priority filter; policy drop;

		ct state invalid drop
		ct state { established, related } accept
		tcp flags syn / fin,syn,rst,ack jump input_syn_flood comment "Rate limit TCP syn packets"

		ct status dnat accept comment "Accept port forwardings"

		iifname lo accept
		iifname { $if_lan, $if_wg_main } jump input_lan
		iifname $if_lan_mgmt jump input_lan_mgmt
		iifname $if_lan_guest jump input_lan_guest
		iifname $if_modem jump input_modem
		iifname $if_wan jump input_wan

		log flags all prefix "dropped input: "
	}

	chain forward {
		type filter hook forward priority filter; policy drop;

		ct state invalid drop
		ct state { established, related } accept

		ct status dnat accept comment "Accept port forwardings"

		iifname { $if_lan, $if_wg_main } oifname $if_wan accept comment "Main internet forwarding"
		iifname $if_lan_guest oifname $if_wan ether saddr $guests_with_internet_access accept comment "Guest internet"
		iifname $if_wg_main oifname $if_lan accept comment "LAN access for wireguard"
		iifname { $if_lan, $if_wg_main } oifname $if_lan_guest accept comment "Let LAN access guests"
		iifname { $if_lan, $if_wg_main } oifname $if_wg_parents accept comment "Let LAN access parents wireguard"
		iifname { $if_lan, $if_wg_main, $if_lan_guest } oifname $if_lan ip daddr 100.64.0.0/16 accept comment "work vpn"
		iifname $if_lan_guest oifname $if_lan ip daddr 192.168.43.67 tcp dport 80 accept comment "roms-nginx"

		log flags all prefix "dropped forward: "
	}

	chain mangle_forward {
		type filter hook forward priority mangle; policy accept;

		iifname $if_wan tcp flags syn tcp option maxseg size set rt mtu comment "clamp TCP MSS to Path MTU"
		oifname $if_wan tcp flags syn tcp option maxseg size set rt mtu comment "clamp TCP MSS to Path MTU"
	}

	chain output {
		type filter hook output priority filter; policy accept;

		ct state invalid drop
		ct state { established, related } accept
	}

	chain dstnat_from_cloudflare {
		meta nfproto ipv4 tcp dport 443 dnat ip to 192.168.43.63:443 comment "File server"
	}

	chain dstnat {
		type nat hook prerouting priority dstnat; policy accept;

		iifname $if_wan ip saddr {
			103.21.244.0/22,
			103.22.200.0/22,
			103.31.4.0/22,
			104.16.0.0/13,
			104.24.0.0/14,
			108.162.192.0/18,
			131.0.72.0/22,
			141.101.64.0/18,
			162.158.0.0/15,
			172.64.0.0/13,
			173.245.48.0/20,
			188.114.96.0/20,
			190.93.240.0/20,
			197.234.240.0/22,
			198.41.128.0/17
		} jump dstnat_from_cloudflare
		iifname $if_lan_mgmt meta nfproto ipv4 tcp dport 8080 dnat ip to 192.168.1.1:80 comment "Modem"
		iifname $if_lan_guest meta nfproto ipv4 udp dport 8888 dnat ip to 192.168.43.64:8888 comment "smartmeter"
	}

	chain srcnat {
		type nat hook postrouting priority srcnat; policy accept;

		oifname { $if_wan, $if_wg_parents } meta nfproto ipv4 masquerade

		oifname $if_lan_guest ip daddr {
			# samsungtv
			192.168.46.160,
		} meta nfproto ipv4 masquerade
	}
}
